//input verify
//author:jie yang --- 2015.10.06

(function($){
	//过长字符删减
	$.fn.cutlongStr = function(n){
		var str = this.html()
		this.attr('title',str);
		if(str.length>n){
			this.html(str.substring(0,n)+'...');
		}
		return this;      //返回jQuery对象,便于链式调用
    };
	
	//全选功能
	$.fn.checkAll = function(options){
		var me = this;
		var Len = options.length;
		this.click(function(){
			options.prop('checked',$(this).prop('checked'));
		});
		options.click(function(){
			me.prop('checked',options.filter(':checked').length == Len?true:false);
		});
		return this;
	};
	
	//表单提交时删除空格
	$.fn.Trim = function(){
	    var me = this;
    	this.blur(function(){
           Replace();
    	});
    	this.parents('form').submit(function(){
    	   Replace();
    	});
    	var Replace = function(){
    	   var V = me.val();
    	   if(V != ''){
    	   	 me.val(V.replace(/\s/g,''));
    	   }
    	}
    	return this;
    };
	$('.Trim').each(function(i,e){        //所有的Trim类均主动调用该方法
		$(e).Trim();
	});
	
	//表单验证方法
	$.fn.validator = function(options){
		var me = this;
		var rex = {
			phoneNum:/^1[3,5,7,8]\d{9}$/,
			eMail:/^\w+@[a-z0-9]+(\.[a-z]+){1,3}$/,
			sPecial:/[`~!@#\$%\^\&\，\。\、\￥\s\*\(\)_\+<>\?:"\{\},\.\\\/;'\[\]]/g,
			Mac:/[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}/,
			fixLine:/^\d{8,}$/,
			onlyNum:/^\d+$/g,
			onlyChin:/^[\u4e00-\u9fa5]+$/,
			webAddress:/^(([hH][tT]{2}[pP][sS]?)|([fF][tT][pP]))\:\/\/[wW]{3}\.[\w-]+\.\w{2,4}(\/.*)?$/,
			iD:/^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[X])$)$/
        };
		var defaults = {
			errContainer:me.siblings('.error'),
			errorTips:'',
			objEqual:null,
			required:false,
			requiredMsg:'',
			equalMsg:'',
			minLength:null,
			minMsg:'',
			maxVal:null,
			minVal:null,
			valMsg:'',
			testType:null
		};
		var opts = $.extend({},defaults,options);
		me.init = function(){
			return (me.tocheck(opts.testType) && me.required() && me.minlength(opts.minLength) && me.equal(opts.objEqual) && me.valCheck(opts.minVal,opts.maxVal));
		};
		me.tocheck = function(type){
			if(type){
				if(this.val() != ''){
    				if(type != 'sPecial'){
    					if(!rex[type].test(this.val())){
        					opts.errContainer.html(opts.errorTips);
        					return false;
        				}else{
        					opts.errContainer.html('');
        					return true;
        				}
    				}else{
    					if(rex[type].test(this.val())){
        					opts.errContainer.html(opts.errorTips);
        					return false;
        				}else{
        					opts.errContainer.html('');
        					return true;
        				};
    				};
    			}else{
    				opts.errContainer.html('');
    				return true;
    			};
			}else{
				opts.errContainer.html('');
				return true;
			}
		};
		me.required = function(){
			if(opts.required){
				if(this.val() == ''){
    				opts.errContainer.html(opts.requiredMsg);
    				return false;
    			}else{
    				opts.errContainer.html('');
    				return true;
    			}
			}else{
				return true;
			}
		};
		me.equal = function(obj){
			if(obj){
				if(this.val() != obj.val()){
    				opts.errContainer.html(opts.equalMsg);
    				return false;
    			}else{
    				return true;
    			}
			}else{
				return true;
			}
		};
		me.minlength = function(n){
			if(this.val() != ''){
				if(n){
					if(this.val().length<n){
						opts.errContainer.html(opts.minMsg);
						return false;
					}else{
						return true;
					}
				}else{
					return true;
				}
			}else{
				return true;
			}	
		};
		me.valCheck = function(v1,v2){
			var v = this.val();
			if(v != ''){
				if(v1 && v2){
					if(v>v2 || v<v1){
						opts.errContainer.html(opts.valMsg);
						return false;
					}else{
						opts.errContainer.html('');
						return true;
					}
				}else{
					return true;
				}
			}else{
				return true;
			}
			
		}
		return me.init();
    };
    
    //回车提交表单
    $.fn.enterSub = function(options){
    	//options参数传入一个按钮对象,当一个form表单的提交是用type=button的click事件来模拟的时候,则传入这个按钮的jQuery对象,并且在回车时主动触发click事件,如果不传这个options参数,则默认是type=submit提交
    	  var opt = null;
    	  var me = this;
    	 if(options){
    	 	  opt = options;
    	 };
    	 me.keydown(function(e){
    	 	  var keyCode = e.which || e.keyCode;
    	 	  if(keyCode == 13){
	    	 	  	if(opt != null){
	    	 	  		opt.trigger('click');
	    	 	  	}else{
	    	 	  		$(this).submit();
	    	 	  	}
			  }
    	 });
    }
})(jQuery);